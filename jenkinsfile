pipeline {
    agent any

    tools{
        maven "Maven3"
    }

    environment{
        registry = "public.ecr.aws/g9q8u2z7/docker-repo"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/akmagar/springboot-eks']]])
            }
        }

        stage("Build Jar"){
            steps{
                sh "mvn clean install"
            }
        }

        stage("Build Docker Image"){
            steps{
                script{
                    docker.build registry
                }
            }
        }

        stage("Push Image to ECR"){
            steps{
                sh "aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/g9q8u2z7"
                sh "docker build -t docker-repo ."
                sh "docker tag docker-repo:latest public.ecr.aws/g9q8u2z7/docker-repo:latest"
                sh "docker push public.ecr.aws/g9q8u2z7/docker-repo:latest"
            }
        }

        stage("Kubernetes Deployment"){
            steps{
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'k8s', namespace: '', serverUrl: '') {
                    sh "kubectl apply -f kubernetes.yaml"
                }
            }
        }
    }
}
